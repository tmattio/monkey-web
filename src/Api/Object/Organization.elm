-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module Api.Object.Organization exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.Union
import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Api.Object.Organization
selection constructor =
    Object.selection constructor


avatarUrl : Field (Maybe String) Api.Object.Organization
avatarUrl =
    Object.fieldDecoder "avatarUrl" [] (Decode.string |> Decode.nullable)


billingEmail : Field (Maybe String) Api.Object.Organization
billingEmail =
    Object.fieldDecoder "billingEmail" [] (Decode.string |> Decode.nullable)


datasets : SelectionSet decodesTo Api.Object.Dataset -> Field (Maybe (List (Maybe decodesTo))) Api.Object.Organization
datasets object =
    Object.selectionField "datasets" [] object (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


description : Field (Maybe String) Api.Object.Organization
description =
    Object.fieldDecoder "description" [] (Decode.string |> Decode.nullable)


email : Field (Maybe String) Api.Object.Organization
email =
    Object.fieldDecoder "email" [] (Decode.string |> Decode.nullable)


{-| Identifies the primary key from the organization.
-}
id : Field Api.Scalar.Id Api.Object.Organization
id =
    Object.fieldDecoder "id" [] (Decode.oneOf [ Decode.string, Decode.float |> Decode.map toString, Decode.int |> Decode.map toString, Decode.bool |> Decode.map toString ] |> Decode.map Api.Scalar.Id)


isActive : Field (Maybe Bool) Api.Object.Organization
isActive =
    Object.fieldDecoder "isActive" [] (Decode.bool |> Decode.nullable)


name : Field (Maybe String) Api.Object.Organization
name =
    Object.fieldDecoder "name" [] (Decode.string |> Decode.nullable)


users : SelectionSet decodesTo Api.Object.User -> Field (Maybe (List (Maybe decodesTo))) Api.Object.Organization
users object =
    Object.selectionField "users" [] object (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


websiteUrl : Field (Maybe String) Api.Object.Organization
websiteUrl =
    Object.fieldDecoder "websiteUrl" [] (Decode.string |> Decode.nullable)
