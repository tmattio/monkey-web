-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module Api.Object.User exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.Union
import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) Api.Object.User
selection constructor =
    Object.selection constructor


avatarUrl : Field (Maybe String) Api.Object.User
avatarUrl =
    Object.fieldDecoder "avatarUrl" [] (Decode.string |> Decode.nullable)


bio : Field (Maybe String) Api.Object.User
bio =
    Object.fieldDecoder "bio" [] (Decode.string |> Decode.nullable)


company : Field (Maybe String) Api.Object.User
company =
    Object.fieldDecoder "company" [] (Decode.string |> Decode.nullable)


datasets : SelectionSet decodesTo Api.Object.Dataset -> Field (List decodesTo) Api.Object.User
datasets object =
    Object.selectionField "datasets" [] object (identity >> Decode.list)


email : Field String Api.Object.User
email =
    Object.fieldDecoder "email" [] Decode.string


followedDatasets : SelectionSet decodesTo Api.Object.Dataset -> Field (List decodesTo) Api.Object.User
followedDatasets object =
    Object.selectionField "followedDatasets" [] object (identity >> Decode.list)


followers : SelectionSet decodesTo Api.Object.User -> Field (List decodesTo) Api.Object.User
followers object =
    Object.selectionField "followers" [] object (identity >> Decode.list)


following : SelectionSet decodesTo Api.Object.User -> Field (List decodesTo) Api.Object.User
following object =
    Object.selectionField "following" [] object (identity >> Decode.list)


{-| Identifies the primary key from the user.
-}
id : Field Api.Scalar.Id Api.Object.User
id =
    Object.fieldDecoder "id" [] (Decode.oneOf [ Decode.string, Decode.float |> Decode.map toString, Decode.int |> Decode.map toString, Decode.bool |> Decode.map toString ] |> Decode.map Api.Scalar.Id)


isActive : Field Bool Api.Object.User
isActive =
    Object.fieldDecoder "isActive" [] Decode.bool


lastLogin : Field (Maybe Api.Scalar.DateTime) Api.Object.User
lastLogin =
    Object.fieldDecoder "lastLogin" [] (Decode.oneOf [ Decode.string, Decode.float |> Decode.map toString, Decode.int |> Decode.map toString, Decode.bool |> Decode.map toString ] |> Decode.map Api.Scalar.DateTime |> Decode.nullable)


name : Field String Api.Object.User
name =
    Object.fieldDecoder "name" [] Decode.string


organization : SelectionSet decodesTo Api.Object.Organization -> Field (Maybe decodesTo) Api.Object.User
organization object =
    Object.selectionField "organization" [] object (identity >> Decode.nullable)


starredDatasets : SelectionSet decodesTo Api.Object.Dataset -> Field (List decodesTo) Api.Object.User
starredDatasets object =
    Object.selectionField "starredDatasets" [] object (identity >> Decode.list)


username : Field String Api.Object.User
username =
    Object.fieldDecoder "username" [] Decode.string


websiteUrl : Field (Maybe String) Api.Object.User
websiteUrl =
    Object.fieldDecoder "websiteUrl" [] (Decode.string |> Decode.nullable)
